name: Upload Website

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: debug tests
        run: |
          pwd
          ls
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          ls
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my-build
          path: |
            build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - run: |
          mkdir build
          cd build
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: my-build
      - run: |
          ls
          cd ../
      - name: Configure AWS credentials
        run: |
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Display AWS user ID
        run: aws sts get-caller-identity

      - name: List S3 buckets
        run: aws s3 ls

      - uses: sai-sharan/aws-s3-sync-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: "us-east-1"
          source: "build"
          destination_bucket: ${{ secrets.AWS_BUCKET_NAME }}
          exclude: ".github/*"
          delete: true
          quiet: false

  invalidate:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS: "/index.html"
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
